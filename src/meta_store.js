// Generated by CoffeeScript 2.5.1
(function() {
  // MetaStore
  // Maps each id from the TokenStore to its stored, _untokenized_ fields in the MetaStore

  // constructor
  hummingbird.MetaStore = function() {
    this.root = {};
  };

  // .load
  // Loads a previously serialized MetaStore
  hummingbird.MetaStore.load = function(serializedData) {
    var store;
    store = new (this)();
    store.root = serializedData.root;
    return store;
  };

  // toJSON
  // Returns a JSON representation of the MetaStore
  hummingbird.MetaStore.prototype.toJSON = function() {
    return {
      root: this.root
    };
  };

  // add
  // Adds a hash of name-value pairs to the MetaStore
  hummingbird.MetaStore.prototype.add = function(doc) {
    if (!(this.has(doc['id']) || doc === undefined)) {
      this.root[doc['id']] = doc;
    }
  };

  // has
  // Checks for this id in the MetaStore
  hummingbird.MetaStore.prototype.has = function(docId) {
    if (!docId) {
      return false;
    }
    if (docId in this.root) {
      return true;
    } else {
      return false;
    }
  };

  // get
  // Retrieve the name-value pairs associated with this id
  hummingbird.MetaStore.prototype.get = function(docId) {
    return this.root[docId];
  };

  // remove
  // Remove the name-value pairs associated with this id
  hummingbird.MetaStore.prototype.remove = function(docId) {
    if (!docId || !this.root[docId]) {
      return;
    }
    return delete this.root[docId];
  };

}).call(this);
